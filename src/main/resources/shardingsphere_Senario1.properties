########################################################################################
########## 这是水平分表的设置，一个数据库，两张一样的表
########################################################################################

# 用一个 entity 对应两张表
spring.main.allow-bean-definition-overriding=true

# 给数据源起名字，随便起
spring.shardingsphere.datasource.names=ds0

spring.shardingsphere.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/course_db?useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=vincent
spring.shardingsphere.datasource.ds0.password=1q2w3e4R

# 注意，是 course, 不是 course_1, 或者 course_2
# s0.course_$->{1..2} 代表 ds0 (datasource name) 的 course_1 到 course_2
spring.shardingsphere.sharding.tables.course.actual-data-nodes=ds0.course_$->{1..2}

# 指定 course 表的主键生成策略, SNOWFLAKE 叫雪花算法，就是生成随机
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# 指定分片的策略
# 例如，约定 cid 的值是偶数，那么添加到 course_1 的表, 如果 cid 的值是奇数，那么添加到 course_2
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}

# 打开 SQL 的输出日志
spring.shardingsphere.props.sql.show=true
